{"version":3,"sources":["../../src/lib/connectLayoutToPlot.js"],"names":["connectLayoutToPlot","WrappedComponent","LayoutConnectedComponent","context","layout","fullLayout","plotly","onUpdate","updateContainer","type","UPDATE_LAYOUT","payload","update","getValObject","PlotSchema","getLayoutValObject","attr","parts","container","fullContainer","props","displayName","contextTypes","object","func","childContextTypes","plotly_editor_traits"],"mappings":";;;;;;;;kBAMwBA,mB;;AANxB;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;;;;;;;AAEe,SAASA,mBAAT,CAA6BC,gBAA7B,EAA+C;AAAA,MACtDC,wBADsD;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,wCAExC;AAAA,uBAC+B,KAAKC,OADpC;AAAA,YACTC,MADS,YACTA,MADS;AAAA,YACDC,UADC,YACDA,UADC;AAAA,YACWC,MADX,YACWA,MADX;AAAA,YACmBC,QADnB,YACmBA,QADnB;;;AAGhB,YAAMC,kBAAkB,SAAlBA,eAAkB,SAAU;AAChC,cAAI,CAACD,QAAL,EAAe;AACb;AACD;AACDA,mBAAS;AACPE,kBAAM,0BAAeC,aADd;AAEPC,qBAAS;AACPC;AADO;AAFF,WAAT;AAMD,SAVD;;AAYA,eAAO;AACLC,wBAAc;AAAA,mBACZ,CAACP,MAAD,GACI,IADJ,GAEIA,OAAOQ,UAAP,CAAkBC,kBAAlB,CACEV,UADF,EAEE,+BAAe,EAAf,EAAmBW,IAAnB,EAAyBC,KAF3B,CAHQ;AAAA,WADT;AAQLT,0CARK;AASLU,qBAAWd,MATN;AAULe,yBAAed;AAVV,SAAP;AAYD;AA7ByD;AAAA;AAAA,+BA+BjD;AACP,eAAO,8BAAC,gBAAD,EAAsB,KAAKe,KAA3B,CAAP;AACD;AAjCyD;;AAAA;AAAA;;AAoC5DlB,2BAAyBmB,WAAzB,uBAAyD,yBACvDpB,gBADuD,CAAzD;;AAIAC,2BAAyBoB,YAAzB,GAAwC;AACtClB,YAAQ,oBAAUmB,MADoB;AAEtClB,gBAAY,oBAAUkB,MAFgB;AAGtCjB,YAAQ,oBAAUiB,MAHoB;AAItChB,cAAU,oBAAUiB;AAJkB,GAAxC;;AAOAtB,2BAAyBuB,iBAAzB,GAA6C;AAC3CZ,kBAAc,oBAAUW,IADmB;AAE3ChB,qBAAiB,oBAAUgB,IAFgB;AAG3CN,eAAW,oBAAUK,MAHsB;AAI3CJ,mBAAe,oBAAUI;AAJkB,GAA7C;;AA/C4D,MAsDrDG,oBAtDqD,GAsD7BzB,gBAtD6B,CAsDrDyB,oBAtDqD;;AAuD5DxB,2BAAyBwB,oBAAzB,GAAgDA,oBAAhD;;AAEA,SAAOxB,wBAAP;AACD","file":"connectLayoutToPlot.js","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport nestedProperty from 'plotly.js/src/lib/nested_property';\nimport {getDisplayName} from '../lib';\nimport {EDITOR_ACTIONS} from './constants';\n\nexport default function connectLayoutToPlot(WrappedComponent) {\n  class LayoutConnectedComponent extends Component {\n    getChildContext() {\n      const {layout, fullLayout, plotly, onUpdate} = this.context;\n\n      const updateContainer = update => {\n        if (!onUpdate) {\n          return;\n        }\n        onUpdate({\n          type: EDITOR_ACTIONS.UPDATE_LAYOUT,\n          payload: {\n            update,\n          },\n        });\n      };\n\n      return {\n        getValObject: attr =>\n          !plotly\n            ? null\n            : plotly.PlotSchema.getLayoutValObject(\n                fullLayout,\n                nestedProperty({}, attr).parts\n              ),\n        updateContainer,\n        container: layout,\n        fullContainer: fullLayout,\n      };\n    }\n\n    render() {\n      return <WrappedComponent {...this.props} />;\n    }\n  }\n\n  LayoutConnectedComponent.displayName = `LayoutConnected${getDisplayName(\n    WrappedComponent\n  )}`;\n\n  LayoutConnectedComponent.contextTypes = {\n    layout: PropTypes.object,\n    fullLayout: PropTypes.object,\n    plotly: PropTypes.object,\n    onUpdate: PropTypes.func,\n  };\n\n  LayoutConnectedComponent.childContextTypes = {\n    getValObject: PropTypes.func,\n    updateContainer: PropTypes.func,\n    container: PropTypes.object,\n    fullContainer: PropTypes.object,\n  };\n\n  const {plotly_editor_traits} = WrappedComponent;\n  LayoutConnectedComponent.plotly_editor_traits = plotly_editor_traits;\n\n  return LayoutConnectedComponent;\n}\n"]}