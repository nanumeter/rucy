{"version":3,"sources":["../../src/lib/constants.js"],"names":["baseClass","MULTI_VALUED","MULTI_VALUED_PLACEHOLDER","getMultiValueText","key","_","multiValueText","title","text","subText","EDITOR_ACTIONS","UPDATE_TRACES","ADD_TRACE","DELETE_TRACE","UPDATE_LAYOUT","DELETE_ANNOTATION","DELETE_SHAPE","DELETE_IMAGE","DELETE_RANGESELECTOR","DELETE_TRANSFORM","DEFAULT_FONTS","label","value","RETURN_KEY","ESCAPE_KEY","COMMAND_KEY","CONTROL_KEY","TRACE_TO_AXIS","cartesian","ternary","gl3d","geo","mapbox","polar","TRANSFORMS_LIST"],"mappings":";;;;;AAAO,IAAMA,gCAAY,eAAlB;;AAEP;;;;;;;;AAQO,IAAMC,sCAAe,kBAArB;;AAEP;AACO,IAAMC,8DAA2B,KAAjC;;AAEA,IAAMC,gDAAoB,SAApBA,iBAAoB,CAACC,GAAD,EAAMC,CAAN,EAAY;AAC3C,MAAMC,iBAAiB;AACrBC,WAAOF,EAAE,iBAAF,CADc;AAErBG,UAAMH,EACJ,wDACE,0DAFE,CAFe;AAMrBI,aAASJ,EACP,0DACE,sDAFK;AANY,GAAvB;AAWA,SAAOC,eAAeF,GAAf,CAAP;AACD,CAbM;;AAeA,IAAMM,0CAAiB;AAC5BC,iBAAe,6BADa;AAE5BC,aAAW,yBAFiB;AAG5BC,gBAAc,4BAHc;AAI5BC,iBAAe,6BAJa;AAK5BC,qBAAmB,iCALS;AAM5BC,gBAAc,4BANc;AAO5BC,gBAAc,4BAPc;AAQ5BC,wBAAsB,oCARM;AAS5BC,oBAAkB;AATU,CAAvB;;AAYA,IAAMC,wCAAgB,CAC3B,EAACC,OAAO,YAAR,EAAsBC,OAAO,YAA7B,EAD2B,EAE3B,EAACD,OAAO,OAAR,EAAiBC,OAAO,OAAxB,EAF2B,EAG3B,EAACD,OAAO,YAAR,EAAsBC,OAAO,WAA7B,EAH2B,CAAtB;;AAMA,IAAMC,kCAAa,OAAnB;AACA,IAAMC,kCAAa,QAAnB;AACA,IAAMC,oCAAc,MAApB;AACA,IAAMC,oCAAc,SAApB;;AAEP;AACA;AACO,IAAMC,wCAAgB;AAC3BC,aAAW,CACT,SADS,EAET,WAFS,EAGT,KAHS,EAIT,QAJS,EAKT,KALS,EAMT,SANS,EAOT,WAPS,EAQT,SARS,EAST,MATS,EAUT,aAVS,EAWT,WAXS,EAYT,aAZS,EAaT,oBAbS,CADgB;AAgB3BC,WAAS,CAAC,gBAAD,CAhBkB;AAiB3BC,QAAM,CAAC,WAAD,EAAc,SAAd,EAAyB,QAAzB,CAjBqB;AAkB3BC,OAAK,CAAC,YAAD,EAAe,YAAf,CAlBsB;AAmB3BC,UAAQ,CAAC,eAAD,CAnBmB;AAoB3BC,SAAO,CAAC,cAAD,EAAiB,gBAAjB;AApBoB,CAAtB;;AAuBA,IAAMC,4CAAkB,CAAC,QAAD,EAAW,SAAX,EAAsB,WAAtB,CAAxB","file":"constants.js","sourcesContent":["export const baseClass = 'plotly-editor';\n\n/*\n * Control represents multiple settings (like for several axes)\n * and the values are different.\n *\n * Because this is sometimes used in contexts where users can enter freeform\n * strings, we include a non-printable character (ESC) so it's not something\n * people could type.\n */\nexport const MULTI_VALUED = '\\x1bMIXED_VALUES';\n\n// how mixed values are represented in text inputs\nexport const MULTI_VALUED_PLACEHOLDER = '---';\n\nexport const getMultiValueText = (key, _) => {\n  const multiValueText = {\n    title: _('Multiple Values'),\n    text: _(\n      'This input has multiple values associated with it. ' +\n        'Changing this setting will override these custom inputs.'\n    ),\n    subText: _(\n      \"Common Case: An 'All' tab might display this message \" +\n        'because the X and Y tabs contain different settings.'\n    ),\n  };\n  return multiValueText[key];\n};\n\nexport const EDITOR_ACTIONS = {\n  UPDATE_TRACES: 'plotly-editor-update-traces',\n  ADD_TRACE: 'plotly-editor-add-trace',\n  DELETE_TRACE: 'plotly-editor-delete-trace',\n  UPDATE_LAYOUT: 'plotly-editor-update-layout',\n  DELETE_ANNOTATION: 'plotly-editor-delete-annotation',\n  DELETE_SHAPE: 'plotly-editor-delete-shape',\n  DELETE_IMAGE: 'plotly-editor-delete-image',\n  DELETE_RANGESELECTOR: 'plotly-editor-delete-rangeselector',\n  DELETE_TRANSFORM: 'plotly-editor-delete-transform',\n};\n\nexport const DEFAULT_FONTS = [\n  {label: 'Sans Serif', value: 'sans-serif'},\n  {label: 'Serif', value: 'serif'},\n  {label: 'Monospaced', value: 'monospace'},\n];\n\nexport const RETURN_KEY = 'Enter';\nexport const ESCAPE_KEY = 'Escape';\nexport const COMMAND_KEY = 'Meta';\nexport const CONTROL_KEY = 'Control';\n\n// matches gd._fullLayout._subplots categories except for xaxis & yaxis which\n// are in fact cartesian types\nexport const TRACE_TO_AXIS = {\n  cartesian: [\n    'scatter',\n    'scattergl',\n    'box',\n    'violin',\n    'bar',\n    'heatmap',\n    'heatmapgl',\n    'contour',\n    'ohlc',\n    'candlestick',\n    'histogram',\n    'histogram2d',\n    'histogram2dcontour',\n  ],\n  ternary: ['scatterternary'],\n  gl3d: ['scatter3d', 'surface', 'mesh3d'],\n  geo: ['scattergeo', 'choropleth'],\n  mapbox: ['scattermapbox'],\n  polar: ['scatterpolar', 'scatterpolargl'],\n};\n\nexport const TRANSFORMS_LIST = ['filter', 'groupby', 'aggregate'];\n"]}