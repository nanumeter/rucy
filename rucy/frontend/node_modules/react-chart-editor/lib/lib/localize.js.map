{"version":3,"sources":["../../src/lib/localize.js"],"names":["localize","localizeString","Comp","LocalizedComponent","props","context","dictionaries","locale","str","displayName","contextTypes","object","string","plotly_editor_traits","key","dict","hasOwnProperty"],"mappings":";;;;;;;;;;kBAIwBA,Q;QA2BRC,c,GAAAA,c;;AA/BhB;;;;AACA;;;;AACA;;;;;;;;;;AAEe,SAASD,QAAT,CAAkBE,IAAlB,EAAwB;AAAA,MAC/BC,kBAD+B;AAAA;;AAEnC,gCAAYC,KAAZ,EAAmBC,OAAnB,EAA4B;AAAA;;AAAA,0IACpBD,KADoB,EACbC,OADa;;AAG1B,UAAMC,eAAeD,QAAQC,YAA7B;AACA,UAAMC,SAASF,QAAQE,MAAvB;;AAEA,YAAKP,QAAL,GAAgB,SAASA,QAAT,CAAkBQ,GAAlB,EAAuB;AACrC,eAAOP,eAAeK,YAAf,EAA6BC,MAA7B,EAAqCC,GAArC,CAAP;AACD,OAFD;AAN0B;AAS3B;;AAXkC;AAAA;AAAA,+BAa1B;AACP,eAAO,8BAAC,IAAD,aAAM,UAAU,KAAKR,QAArB,IAAmC,KAAKI,KAAxC,EAAP;AACD;AAfkC;;AAAA;AAAA;;AAiBrCD,qBAAmBM,WAAnB,iBAA6C,sBAAeP,IAAf,CAA7C;AACAC,qBAAmBO,YAAnB,GAAkCP,mBAAmBO,YAAnB,IAAmC,EAArE;AACAP,qBAAmBO,YAAnB,CAAgCJ,YAAhC,GAA+C,oBAAUK,MAAzD;AACAR,qBAAmBO,YAAnB,CAAgCH,MAAhC,GAAyC,oBAAUK,MAAnD;;AAEAT,qBAAmBU,oBAAnB,GAA0CX,KAAKW,oBAA/C;;AAEA,SAAOV,kBAAP;AACD;;AAEM,SAASF,cAAT,CAAwBK,YAAxB,EAAsCC,MAAtC,EAA8CO,GAA9C,EAAmD;AACxD,MAAMC,OAAOT,aAAaC,MAAb,CAAb;AACA,MAAIQ,QAAQA,KAAKC,cAAL,CAAoBF,GAApB,CAAZ,EAAsC;AACpC,WAAOC,KAAKD,GAAL,CAAP;AACD;AACD,SAAOA,GAAP;AACD","file":"localize.js","sourcesContent":["import PropTypes from 'prop-types';\nimport React, {Component} from 'react';\nimport {getDisplayName} from 'lib';\n\nexport default function localize(Comp) {\n  class LocalizedComponent extends Component {\n    constructor(props, context) {\n      super(props, context);\n\n      const dictionaries = context.dictionaries;\n      const locale = context.locale;\n\n      this.localize = function localize(str) {\n        return localizeString(dictionaries, locale, str);\n      };\n    }\n\n    render() {\n      return <Comp localize={this.localize} {...this.props} />;\n    }\n  }\n  LocalizedComponent.displayName = `Localized${getDisplayName(Comp)}`;\n  LocalizedComponent.contextTypes = LocalizedComponent.contextTypes || {};\n  LocalizedComponent.contextTypes.dictionaries = PropTypes.object;\n  LocalizedComponent.contextTypes.locale = PropTypes.string;\n\n  LocalizedComponent.plotly_editor_traits = Comp.plotly_editor_traits;\n\n  return LocalizedComponent;\n}\n\nexport function localizeString(dictionaries, locale, key) {\n  const dict = dictionaries[locale];\n  if (dict && dict.hasOwnProperty(key)) {\n    return dict[key];\n  }\n  return key;\n}\n"]}