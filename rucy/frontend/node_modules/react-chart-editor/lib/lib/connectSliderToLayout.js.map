{"version":3,"sources":["../../src/lib/connectSliderToLayout.js"],"names":["connectSliderToLayout","WrappedComponent","SliderConnectedComponent","props","context","updateSlider","bind","setLocals","nextProps","nextContext","sliderIndex","container","fullContainer","sliders","fullSliders","getValObject","attr","updateContainer","update","newUpdate","key","newkey","displayName","propTypes","number","isRequired","contextTypes","object","onUpdate","func","childContextTypes","plotly_editor_traits"],"mappings":";;;;;;;;kBAIwBA,qB;;AAJxB;;;;AACA;;;;AACA;;;;;;;;;;AAEe,SAASA,qBAAT,CAA+BC,gBAA/B,EAAiD;AAAA,MACxDC,wBADwD;AAAA;;AAE5D,sCAAYC,KAAZ,EAAmBC,OAAnB,EAA4B;AAAA;;AAAA,sJACpBD,KADoB,EACbC,OADa;;AAE1B,YAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,OAApB;AACA,YAAKC,SAAL,CAAeJ,KAAf,EAAsBC,OAAtB;AAH0B;AAI3B;;AAN2D;AAAA;AAAA,gDAQlCI,SARkC,EAQvBC,WARuB,EAQV;AAChD,aAAKF,SAAL,CAAeC,SAAf,EAA0BC,WAA1B;AACD;AAV2D;AAAA;AAAA,gCAYlDN,KAZkD,EAY3CC,OAZ2C,EAYlC;AAAA,YACjBM,WADiB,GACFP,KADE,CACjBO,WADiB;AAAA,YAEjBC,SAFiB,GAEWP,OAFX,CAEjBO,SAFiB;AAAA,YAENC,aAFM,GAEWR,OAFX,CAENQ,aAFM;;;AAIxB,YAAMC,UAAUF,UAAUE,OAAV,IAAqB,EAArC;AACA,YAAMC,cAAcF,cAAcC,OAAd,IAAyB,EAA7C;AACA,aAAKF,SAAL,GAAiBE,QAAQH,WAAR,CAAjB;AACA,aAAKE,aAAL,GAAqBE,YAAYJ,WAAZ,CAArB;AACD;AApB2D;AAAA;AAAA,wCAsB1C;AAAA;;AAChB,eAAO;AACLK,wBAAc;AAAA,mBACZ,CAAC,OAAKX,OAAL,CAAaW,YAAd,GACI,IADJ,GAEI,OAAKX,OAAL,CAAaW,YAAb,gBAAuCC,IAAvC,CAHQ;AAAA,WADT;AAKLC,2BAAiB,KAAKZ,YALjB;AAMLM,qBAAW,KAAKA,SANX;AAOLC,yBAAe,KAAKA;AAPf,SAAP;AASD;AAhC2D;AAAA;AAAA,mCAkC/CM,MAlC+C,EAkCvC;AACnB,YAAMC,YAAY,EAAlB;AADmB,YAEZT,WAFY,GAEG,KAAKP,KAFR,CAEZO,WAFY;;AAGnB,aAAK,IAAMU,GAAX,IAAkBF,MAAlB,EAA0B;AACxB,cAAMG,sBAAoBX,WAApB,UAAoCU,GAA1C;AACAD,oBAAUE,MAAV,IAAoBH,OAAOE,GAAP,CAApB;AACD;AACD,aAAKhB,OAAL,CAAaa,eAAb,CAA6BE,SAA7B;AACD;AA1C2D;AAAA;AAAA,+BA4CnD;AACP,eAAO,8BAAC,gBAAD,EAAsB,KAAKhB,KAA3B,CAAP;AACD;AA9C2D;;AAAA;AAAA;;AAiD9DD,2BAAyBoB,WAAzB,uBAAyD,yBACvDrB,gBADuD,CAAzD;;AAIAC,2BAAyBqB,SAAzB,GAAqC;AACnCb,iBAAa,oBAAUc,MAAV,CAAiBC;AADK,GAArC;;AAIAvB,2BAAyBwB,YAAzB,GAAwC;AACtCf,eAAW,oBAAUgB,MADiB;AAEtCf,mBAAe,oBAAUe,MAFa;AAGtCC,cAAU,oBAAUC,IAHkB;AAItCZ,qBAAiB,oBAAUY,IAJW;AAKtCd,kBAAc,oBAAUc;AALc,GAAxC;;AAQA3B,2BAAyB4B,iBAAzB,GAA6C;AAC3Cb,qBAAiB,oBAAUY,IADgB;AAE3ClB,eAAW,oBAAUgB,MAFsB;AAG3Cf,mBAAe,oBAAUe,MAHkB;AAI3CZ,kBAAc,oBAAUc;AAJmB,GAA7C;;AAjE8D,MAwEvDE,oBAxEuD,GAwE/B9B,gBAxE+B,CAwEvD8B,oBAxEuD;;AAyE9D7B,2BAAyB6B,oBAAzB,GAAgDA,oBAAhD;;AAEA,SAAO7B,wBAAP;AACD","file":"connectSliderToLayout.js","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {getDisplayName} from '../lib';\n\nexport default function connectSliderToLayout(WrappedComponent) {\n  class SliderConnectedComponent extends Component {\n    constructor(props, context) {\n      super(props, context);\n      this.updateSlider = this.updateSlider.bind(this);\n      this.setLocals(props, context);\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n      this.setLocals(nextProps, nextContext);\n    }\n\n    setLocals(props, context) {\n      const {sliderIndex} = props;\n      const {container, fullContainer} = context;\n\n      const sliders = container.sliders || [];\n      const fullSliders = fullContainer.sliders || [];\n      this.container = sliders[sliderIndex];\n      this.fullContainer = fullSliders[sliderIndex];\n    }\n\n    getChildContext() {\n      return {\n        getValObject: attr =>\n          !this.context.getValObject\n            ? null\n            : this.context.getValObject(`sliders[].${attr}`),\n        updateContainer: this.updateSlider,\n        container: this.container,\n        fullContainer: this.fullContainer,\n      };\n    }\n\n    updateSlider(update) {\n      const newUpdate = {};\n      const {sliderIndex} = this.props;\n      for (const key in update) {\n        const newkey = `sliders[${sliderIndex}].${key}`;\n        newUpdate[newkey] = update[key];\n      }\n      this.context.updateContainer(newUpdate);\n    }\n\n    render() {\n      return <WrappedComponent {...this.props} />;\n    }\n  }\n\n  SliderConnectedComponent.displayName = `SliderConnected${getDisplayName(\n    WrappedComponent\n  )}`;\n\n  SliderConnectedComponent.propTypes = {\n    sliderIndex: PropTypes.number.isRequired,\n  };\n\n  SliderConnectedComponent.contextTypes = {\n    container: PropTypes.object,\n    fullContainer: PropTypes.object,\n    onUpdate: PropTypes.func,\n    updateContainer: PropTypes.func,\n    getValObject: PropTypes.func,\n  };\n\n  SliderConnectedComponent.childContextTypes = {\n    updateContainer: PropTypes.func,\n    container: PropTypes.object,\n    fullContainer: PropTypes.object,\n    getValObject: PropTypes.func,\n  };\n\n  const {plotly_editor_traits} = WrappedComponent;\n  SliderConnectedComponent.plotly_editor_traits = plotly_editor_traits;\n\n  return SliderConnectedComponent;\n}\n"]}