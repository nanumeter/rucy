{"version":3,"sources":["../../src/lib/connectToContainer.js"],"names":["connectToContainer","containerConnectedContextTypes","localize","func","container","object","data","array","defaultContainer","fullContainer","fullData","fullLayout","getValObject","graphDiv","layout","onUpdate","plotly","updateContainer","WrappedComponent","config","ContainerConnectedComponent","props","context","plotProps","modifyPlotProps","setLocals","nextProps","nextContext","attr","description","Object","assign","isVisible","displayName","contextTypes","childContextTypes","string","plotly_editor_traits"],"mappings":";;;;;;;;;;;kBAqBwBA,kB;;AArBxB;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;AAEO,IAAMC,0EAAiC;AAC5CC,YAAU,oBAAUC,IADwB;AAE5CC,aAAW,oBAAUC,MAFuB;AAG5CC,QAAM,oBAAUC,KAH4B;AAI5CC,oBAAkB,oBAAUH,MAJgB;AAK5CI,iBAAe,oBAAUJ,MALmB;AAM5CK,YAAU,oBAAUH,KANwB;AAO5CI,cAAY,oBAAUN,MAPsB;AAQ5CO,gBAAc,oBAAUT,IARoB;AAS5CU,YAAU,oBAAUR,MATwB;AAU5CS,UAAQ,oBAAUT,MAV0B;AAW5CU,YAAU,oBAAUZ,IAXwB;AAY5Ca,UAAQ,oBAAUX,MAZ0B;AAa5CY,mBAAiB,oBAAUd;AAbiB,CAAvC;;AAgBQ,SAASH,kBAAT,CAA4BkB,gBAA5B,EAA2D;AAAA,MAAbC,MAAa,uEAAJ,EAAI;;AAAA,MAClEC,2BADkE;AAAA;;AAAA;AAAA;;AAEtE;AACA;AAHsE,sCAI/CC,KAJ+C,EAIxCC,OAJwC,EAI/BC,SAJ+B,EAIpB;AAChD,YAAIL,iBAAiBM,eAArB,EAAsC;AACpCN,2BAAiBM,eAAjB,CAAiCH,KAAjC,EAAwCC,OAAxC,EAAiDC,SAAjD;AACD;AACD,YAAIJ,OAAOK,eAAX,EAA4B;AAC1BL,iBAAOK,eAAP,CAAuBH,KAAvB,EAA8BC,OAA9B,EAAuCC,SAAvC;AACD;AACF;AAXqE;;AAatE,yCAAYF,KAAZ,EAAmBC,OAAnB,EAA4B;AAAA;;AAAA,4JACpBD,KADoB,EACbC,OADa;;AAG1B,YAAKG,SAAL,CAAeJ,KAAf,EAAsBC,OAAtB;AAH0B;AAI3B;;AAjBqE;AAAA;AAAA,gDAmB5CI,SAnB4C,EAmBjCC,WAnBiC,EAmBpB;AAChD,aAAKF,SAAL,CAAeC,SAAf,EAA0BC,WAA1B;AACD;AArBqE;AAAA;AAAA,gCAuB5DN,KAvB4D,EAuBrDC,OAvBqD,EAuB5C;AACxB,aAAKC,SAAL,GAAiB,+BAAgBF,KAAhB,EAAuBC,OAAvB,CAAjB;AACA,aAAKM,IAAL,GAAYP,MAAMO,IAAlB;AACAR,oCAA4BI,eAA5B,CACEH,KADF,EAEEC,OAFF,EAGE,KAAKC,SAHP;AAKD;AA/BqE;AAAA;AAAA,wCAiCpD;AAChB,eAAO;AACLM,uBAAa,KAAKN,SAAL,CAAeM,WADvB;AAELD,gBAAM,KAAKA;AAFN,SAAP;AAID;AAtCqE;AAAA;AAAA,+BAwC7D;AACP;AACA;AACA;AACA;AAJO,6BAKwCE,OAAOC,MAAP,CAC7C,EAD6C,EAE7C,KAAKR,SAFwC,EAG7C,KAAKF,KAHwC,CALxC;AAAA,mDAKAE,SALA;AAAA,YAKAA,SALA,yCAKY,KAAKA,SALjB;AAAA,YAK+BF,KAL/B;;AAUP,YAAIA,MAAMW,SAAV,EAAqB;AACnB,iBAAO,8BAAC,gBAAD,eAAsBX,KAAtB,IAA6B,WAAWE,SAAxC,IAAP;AACD;;AAED,eAAO,IAAP;AACD;AAvDqE;;AAAA;AAAA;;AA0DxEH,8BAA4Ba,WAA5B,0BAA+D,yBAC7Df,gBAD6D,CAA/D;;AAIAE,8BAA4Bc,YAA5B,GAA2CjC,8BAA3C;AACAmB,8BAA4Be,iBAA5B,GAAgD;AAC9CN,iBAAa,oBAAUO,MADuB;AAE9CR,UAAM,oBAAUQ;AAF8B,GAAhD;;AA/DwE,MAoEjEC,oBApEiE,GAoEzCnB,gBApEyC,CAoEjEmB,oBApEiE;;AAqExEjB,8BAA4BiB,oBAA5B,GAAmDA,oBAAnD;;AAEA,SAAOjB,2BAAP;AACD","file":"connectToContainer.js","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport unpackPlotProps from './unpackPlotProps';\nimport {getDisplayName} from '../lib';\n\nexport const containerConnectedContextTypes = {\n  localize: PropTypes.func,\n  container: PropTypes.object,\n  data: PropTypes.array,\n  defaultContainer: PropTypes.object,\n  fullContainer: PropTypes.object,\n  fullData: PropTypes.array,\n  fullLayout: PropTypes.object,\n  getValObject: PropTypes.func,\n  graphDiv: PropTypes.object,\n  layout: PropTypes.object,\n  onUpdate: PropTypes.func,\n  plotly: PropTypes.object,\n  updateContainer: PropTypes.func,\n};\n\nexport default function connectToContainer(WrappedComponent, config = {}) {\n  class ContainerConnectedComponent extends Component {\n    // Run the inner modifications first and allow more recent modifyPlotProp\n    // config function to modify last.\n    static modifyPlotProps(props, context, plotProps) {\n      if (WrappedComponent.modifyPlotProps) {\n        WrappedComponent.modifyPlotProps(props, context, plotProps);\n      }\n      if (config.modifyPlotProps) {\n        config.modifyPlotProps(props, context, plotProps);\n      }\n    }\n\n    constructor(props, context) {\n      super(props, context);\n\n      this.setLocals(props, context);\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n      this.setLocals(nextProps, nextContext);\n    }\n\n    setLocals(props, context) {\n      this.plotProps = unpackPlotProps(props, context);\n      this.attr = props.attr;\n      ContainerConnectedComponent.modifyPlotProps(\n        props,\n        context,\n        this.plotProps\n      );\n    }\n\n    getChildContext() {\n      return {\n        description: this.plotProps.description,\n        attr: this.attr,\n      };\n    }\n\n    render() {\n      // Merge plotprops onto props so leaf components only need worry about\n      // props. However pass plotProps as a specific prop in case inner component\n      // is also wrapped by a component that `unpackPlotProps`. That way inner\n      // component can skip computation as it can see plotProps is already defined.\n      const {plotProps = this.plotProps, ...props} = Object.assign(\n        {},\n        this.plotProps,\n        this.props\n      );\n      if (props.isVisible) {\n        return <WrappedComponent {...props} plotProps={plotProps} />;\n      }\n\n      return null;\n    }\n  }\n\n  ContainerConnectedComponent.displayName = `ContainerConnected${getDisplayName(\n    WrappedComponent\n  )}`;\n\n  ContainerConnectedComponent.contextTypes = containerConnectedContextTypes;\n  ContainerConnectedComponent.childContextTypes = {\n    description: PropTypes.string,\n    attr: PropTypes.string,\n  };\n\n  const {plotly_editor_traits} = WrappedComponent;\n  ContainerConnectedComponent.plotly_editor_traits = plotly_editor_traits;\n\n  return ContainerConnectedComponent;\n}\n"]}