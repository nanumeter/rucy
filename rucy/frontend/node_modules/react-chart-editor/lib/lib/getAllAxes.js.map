{"version":3,"sources":["../../src/lib/getAllAxes.js"],"names":["getAllAxes","traceTypeToAxisType","axisIdToAxisName","getAxisTitle","fullLayout","axes","_subplots","Object","keys","filter","type","length","forEach","includes","subplot","slice","_subplot","_axisGroup","push","key","axis","_name","traceType","category","c","Error","id","charAt","getSubplotNumber","splitSubplot","split","Number","axisType","subplotNb","_input","title"],"mappings":"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","file":"getAllAxes.js","sourcesContent":["import {TRACE_TO_AXIS} from 'lib/constants';\nimport {capitalize, striptags} from 'lib';\n\nexport default function getAllAxes(fullLayout) {\n  const axes = [];\n  // Plotly.js should really have a helper function for this, but until it does..\n  if (fullLayout && fullLayout._subplots) {\n    Object.keys(fullLayout._subplots)\n      .filter(\n        // xaxis and yaxis already included separately in _fullLayout._subplots\n        type => type !== 'cartesian' && fullLayout._subplots[type].length !== 0\n      )\n      .forEach(type => {\n        fullLayout._subplots[type].forEach(subplot => {\n          if (['xaxis', 'yaxis'].includes(type)) {\n            // subplot will look like x2, x45, convert it to xaxis2, xaxis45\n            subplot = // eslint-disable-line no-param-reassign\n              subplot.length > 1\n                ? subplot.slice(0, 1) + 'axis' + subplot.slice(1)\n                : subplot + 'axis';\n\n            fullLayout[subplot]._subplot = subplot;\n            fullLayout[subplot]._axisGroup = type;\n            axes.push(fullLayout[subplot]);\n          } else {\n            Object.keys(fullLayout[subplot])\n              .filter(key => key.includes('axis'))\n              .forEach(axis => {\n                fullLayout[subplot][axis]._subplot = subplot;\n                fullLayout[subplot][axis]._axisGroup = type;\n\n                // it should be in plotly.js, but it's not there for geo axes..\n                if (!fullLayout[subplot][axis]._name) {\n                  fullLayout[subplot][axis]._name = axis;\n                }\n                axes.push(fullLayout[subplot][axis]);\n              });\n          }\n        });\n      });\n  }\n\n  return axes;\n}\n\nexport function traceTypeToAxisType(traceType) {\n  let category = null;\n\n  Object.keys(TRACE_TO_AXIS).forEach(c => {\n    if (TRACE_TO_AXIS[c].includes(traceType)) {\n      category = c;\n    }\n  });\n\n  if (category) {\n    return category;\n  }\n\n  if (traceType === 'pie') {\n    return null;\n  }\n\n  if (traceType === 'table') {\n    return null;\n  }\n\n  throw new Error(`Sorry, could not find ${traceType} in any category.`);\n}\n\nexport function axisIdToAxisName(id) {\n  return id.charAt(0) + 'axis' + id.slice(1);\n}\n\nfunction getSubplotNumber(axis) {\n  const splitSubplot = axis._subplot\n    ? axis._subplot.split(axis._axisGroup)\n    : [];\n  return splitSubplot[1] ? Number(splitSubplot[1]) : 0;\n}\n\nexport function getAxisTitle(axis) {\n  const axisType = capitalize(axis._name.split('axis')[0]);\n  const subplotNb = getSubplotNumber(axis);\n\n  return axis._input && axis._input.title\n    ? striptags(`${axisType}: ${axis._input.title}`)\n    : striptags(`${axisType} ${subplotNb === 0 ? 1 : subplotNb}`);\n}\n"]}