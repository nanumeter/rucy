{"version":3,"sources":["../../src/components/PanelMenuWrapper.js"],"names":["PanelsWithSidebar","props","opts","computeMenuOptions","firstSidebarGroup","filter","o","panels","state","group","name","panel","setPanel","bind","renderSection","setState","section","i","type","plotly_editor_traits","sidebar_element","key","children","sections","groupLookup","groupIndex","Children","forEach","child","obj","hasOwnProperty","length","push","menuOpts","map","propTypes","node"],"mappings":"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","file":"PanelMenuWrapper.js","sourcesContent":["import PropTypes from 'prop-types';\nimport React, {cloneElement, Component} from 'react';\nimport SidebarGroup from './sidebar/SidebarGroup';\nimport {bem} from 'lib';\n\nclass PanelsWithSidebar extends Component {\n  constructor(props) {\n    super(props);\n\n    const opts = this.computeMenuOptions(props);\n    const firstSidebarGroup = opts.filter(o => o.panels)[0];\n\n    this.state = {\n      group: firstSidebarGroup.name,\n      panel: firstSidebarGroup.panels[0],\n    };\n\n    this.setPanel = this.setPanel.bind(this);\n    this.renderSection = this.renderSection.bind(this);\n  }\n\n  setPanel(group, panel) {\n    this.setState({group, panel});\n  }\n\n  renderSection(section, i) {\n    if (\n      section.type &&\n      (section.type.plotly_editor_traits || {}).sidebar_element\n    ) {\n      return cloneElement(section, {key: i});\n    }\n    return (\n      <SidebarGroup\n        key={i}\n        selectedGroup={this.state.group}\n        selectedPanel={this.state.panel}\n        group={section.name}\n        panels={section.panels}\n        onChangeGroup={this.setPanel}\n      />\n    );\n  }\n\n  computeMenuOptions(props) {\n    const {children} = props;\n    const sections = [];\n    const groupLookup = {};\n    let groupIndex;\n\n    React.Children.forEach(children, child => {\n      if (!child) {\n        return;\n      }\n      const group = child.props.group;\n      const name = child.props.name;\n\n      if (group && name) {\n        let obj;\n        if (groupLookup.hasOwnProperty(group)) {\n          groupIndex = groupLookup[group];\n          obj = sections[groupIndex];\n        } else {\n          groupLookup[group] = sections.length;\n          obj = {name: group, panels: []};\n          sections.push(obj);\n        }\n        obj.panels.push(name);\n      }\n\n      if ((child.type.plotly_editor_traits || {}).sidebar_element) {\n        sections.push(child);\n      }\n    });\n\n    return sections;\n  }\n\n  render() {\n    const menuOpts = this.computeMenuOptions(this.props);\n\n    return (\n      <div className={bem('editor_controls', 'wrapper')}>\n        <div className={bem('sidebar')}>{menuOpts.map(this.renderSection)}</div>\n        {React.Children.map(\n          this.props.children,\n          (child, i) =>\n            child === null ||\n            this.state.group !== child.props.group ||\n            this.state.panel !== child.props.name\n              ? null\n              : cloneElement(child, {key: i})\n        )}\n      </div>\n    );\n  }\n}\n\nPanelsWithSidebar.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default PanelsWithSidebar;\n"]}