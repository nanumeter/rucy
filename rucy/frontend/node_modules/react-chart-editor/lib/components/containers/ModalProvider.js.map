{"version":3,"sources":["../../../src/components/containers/ModalProvider.js"],"names":["ModalProvider","props","state","component","componentProps","open","isAnimatingOut","body","document","hasClass","classList","contains","add","remove","Error","setState","animationDuration","setTimeout","closeModal","openModal","c","p","handleClose","Component","children","propTypes","node","childContextTypes","func","bool"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;;;;;;;;;IAEMA,a;;;AACJ,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA,8HACXA,KADW;;AAEjB,UAAKC,KAAL,GAAa;AACXC,iBAAW,IADA;AAEXC,sBAAgB,EAFL;AAGXC,YAAM,KAHK;AAIXC,sBAAgB;AAJL,KAAb;AAFiB;AAQlB;;;;yCAEoB;AACnB,UAAMC,OAAOC,SAASD,IAAtB;AADmB,UAEZF,IAFY,GAEJ,KAAKH,KAFD,CAEZG,IAFY;;AAInB;;AACA,UAAMI,WAAWF,KAAKG,SAAL,CAAeC,QAAf,CAAwB,WAAxB,CAAjB;;AAEA,UAAIN,QAAQ,CAACI,QAAb,EAAuB;AACrBF,aAAKG,SAAL,CAAeE,GAAf,CAAmB,WAAnB;AACD;AACD,UAAI,CAACP,IAAD,IAASI,QAAb,EAAuB;AACrBF,aAAKG,SAAL,CAAeG,MAAf,CAAsB,WAAtB;AACD;AACF;;;8BAESV,S,EAAWF,K,EAAO;AAC1B,UAAI,CAACE,SAAL,EAAgB;AACd,cAAMW,MAAM,wDAAN,CAAN;AACD;AAHyB,UAInBT,IAJmB,GAIX,KAAKH,KAJM,CAInBG,IAJmB;;;AAM1B,UAAI,CAACA,IAAL,EAAW;AACT,aAAKU,QAAL,CAAc;AACZZ,qBAAWA,SADC;AAEZC,0BAAgBH,KAFJ;AAGZI,gBAAM;AAHM,SAAd;AAKD;AACF;;;iCAEY;AAAA,UACJA,IADI,GACI,KAAKH,KADT,CACJG,IADI;;AAEX,UAAIA,IAAJ,EAAU;AACR,aAAKU,QAAL,CAAc;AACZV,gBAAM,KADM;AAEZF,qBAAW;AAFC,SAAd;AAID;AACF;;;kCACa;AAAA;;AACZ,WAAKY,QAAL,CAAc,EAACT,gBAAgB,IAAjB,EAAd;AACA,UAAMU,oBAAoB,GAA1B;AACAC,iBAAW,YAAM;AACf,eAAKF,QAAL,CAAc,EAACT,gBAAgB,KAAjB,EAAd;AACA,eAAKY,UAAL;AACD,OAHD,EAGGF,iBAHH;AAID;;;sCAEiB;AAAA;;AAChB,aAAO;AACLG,mBAAW,mBAACC,CAAD,EAAIC,CAAJ;AAAA,iBAAU,OAAKF,SAAL,CAAeC,CAAf,EAAkBC,CAAlB,CAAV;AAAA,SADN;AAELH,oBAAY;AAAA,iBAAM,OAAKA,UAAL,EAAN;AAAA,SAFP;AAGLI,qBAAa;AAAA,iBAAM,OAAKA,WAAL,EAAN;AAAA,SAHR;AAILhB,wBAAgB,KAAKJ,KAAL,CAAWI;AAJtB,OAAP;AAMD;;;6BAEQ;AAAA,mBACwD,KAAKJ,KAD7D;AAAA,UACWqB,SADX,UACApB,SADA;AAAA,UACsBC,cADtB,UACsBA,cADtB;AAAA,UACsCE,cADtC,UACsCA,cADtC;;AAEP,aACE;AAAA;AAAA;AACG,aAAKL,KAAL,CAAWuB,QADd;AAEG,aAAKtB,KAAL,CAAWG,IAAX,GACC,8BAAC,SAAD,aAAW,gBAAgBC,cAA3B,IAA+CF,cAA/C,EADD,GAEG;AAJN,OADF;AAQD;;;;EA9EyB,gBAAMmB,S;;AAiFlCvB,cAAcyB,SAAd,GAA0B;AACxBD,YAAU,oBAAUE;AADI,CAA1B;AAGA1B,cAAc2B,iBAAd,GAAkC;AAChCR,aAAW,oBAAUS,IADW;AAEhCV,cAAY,oBAAUU,IAFU;AAGhCN,eAAa,oBAAUM,IAHS;AAIhCtB,kBAAgB,oBAAUuB;AAJM,CAAlC;;kBAOe7B,a","file":"ModalProvider.js","sourcesContent":["import React, {Fragment} from 'react';\nimport PropTypes from 'prop-types';\n\nclass ModalProvider extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      component: null,\n      componentProps: {},\n      open: false,\n      isAnimatingOut: false,\n    };\n  }\n\n  componentDidUpdate() {\n    const body = document.body;\n    const {open} = this.state;\n\n    // Toggle scroll on document body if modal is open\n    const hasClass = body.classList.contains('no-scroll');\n\n    if (open && !hasClass) {\n      body.classList.add('no-scroll');\n    }\n    if (!open && hasClass) {\n      body.classList.remove('no-scroll');\n    }\n  }\n\n  openModal(component, props) {\n    if (!component) {\n      throw Error('You need to provide a component for the modal to open!');\n    }\n    const {open} = this.state;\n\n    if (!open) {\n      this.setState({\n        component: component,\n        componentProps: props,\n        open: true,\n      });\n    }\n  }\n\n  closeModal() {\n    const {open} = this.state;\n    if (open) {\n      this.setState({\n        open: false,\n        component: null,\n      });\n    }\n  }\n  handleClose() {\n    this.setState({isAnimatingOut: true});\n    const animationDuration = 600;\n    setTimeout(() => {\n      this.setState({isAnimatingOut: false});\n      this.closeModal();\n    }, animationDuration);\n  }\n\n  getChildContext() {\n    return {\n      openModal: (c, p) => this.openModal(c, p),\n      closeModal: () => this.closeModal(),\n      handleClose: () => this.handleClose(),\n      isAnimatingOut: this.state.isAnimatingOut,\n    };\n  }\n\n  render() {\n    const {component: Component, componentProps, isAnimatingOut} = this.state;\n    return (\n      <Fragment>\n        {this.props.children}\n        {this.state.open ? (\n          <Component isAnimatingOut={isAnimatingOut} {...componentProps} />\n        ) : null}\n      </Fragment>\n    );\n  }\n}\n\nModalProvider.propTypes = {\n  children: PropTypes.node,\n};\nModalProvider.childContextTypes = {\n  openModal: PropTypes.func,\n  closeModal: PropTypes.func,\n  handleClose: PropTypes.func,\n  isAnimatingOut: PropTypes.bool,\n};\n\nexport default ModalProvider;\n"]}