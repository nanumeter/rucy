{"version":3,"sources":["../../../src/components/containers/RangeSelectorAccordion.js"],"names":["RangeSelectorFold","RangeSelectorAccordion","context","fullContainer","rangeselector","visible","_axisGroup","buttons","_","localize","children","props","content","length","map","btn","i","label","addAction","handler","updateContainer","rangeselectorIndex","Array","isArray","contextTypes","object","func","propTypes","node","plotly_editor_traits","no_visibility_forcing"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;AAEA,IAAMA,oBAAoB,0DAA1B;;IAEMC,sB;;;;;;;;;;;6BACK;AACP,UACE,CAAC,KAAKC,OAAL,CAAaC,aAAd,IACA,CAAC,KAAKD,OAAL,CAAaC,aAAb,CAA2BC,aAD5B,IAEA,CAAC,KAAKF,OAAL,CAAaC,aAAb,CAA2BC,aAA3B,CAAyCC,OAF1C;AAGA;AACA,WAAKH,OAAL,CAAaC,aAAb,CAA2BG,UAA3B,KAA0C,CAL5C,EAME;AACA,eAAO,IAAP;AACD;;AATM,qBAgBH,KAAKJ,OAhBF;AAAA,2CAYLC,aAZK,CAaHC,aAbG,CAaaG,OAbb;AAAA,UAaaA,OAbb,yCAauB,EAbvB;AAAA,UAeKC,CAfL,YAeLC,QAfK;AAAA,UAiBAC,QAjBA,GAiBY,KAAKC,KAjBjB,CAiBAD,QAjBA;;;AAmBP,UAAME,UACJL,QAAQM,MAAR,IACAN,QAAQO,GAAR,CAAY,UAACC,GAAD,EAAMC,CAAN;AAAA,eACV;AAAC,2BAAD;AAAA;AACE,iBAAKA,CADP;AAEE,gCAAoBA,CAFtB;AAGE,kBAAMD,IAAIE,KAHZ;AAIE,uBAAW;AAJb;AAMGP;AANH,SADU;AAAA,OAAZ,CAFF;;AAaA,UAAMQ,YAAY;AAChBD,eAAOT,EAAE,QAAF,CADS;AAEhBW,iBAAS,0BAAW;AAAA,cACXhB,aADW,GACuBD,OADvB,CACXC,aADW;AAAA,cACIiB,eADJ,GACuBlB,OADvB,CACIkB,eADJ;;AAElB,cAAIA,eAAJ,EAAqB;AACnB,gBAAMC,qBAAqBC,MAAMC,OAAN,CACzBpB,cAAcC,aAAd,CAA4BG,OADH,IAGvBJ,cAAcC,aAAd,CAA4BG,OAA5B,CAAoCM,MAHb,GAIvB,CAJJ;;AAMAO,2EAC4BC,kBAD5B,QACoD,EADpD;AAGD;AACF;AAfe,OAAlB;;AAkBA,aACE;AAAA;AAAA,UAAa,WAAWH,SAAxB;AACGN,kBAAUA,OAAV,GAAoB;AADvB,OADF;AAKD;;;;;;AAGHX,uBAAuBuB,YAAvB,GAAsC;AACpCrB,iBAAe,oBAAUsB,MADW;AAEpChB,YAAU,oBAAUiB;AAFgB,CAAtC;;AAKAzB,uBAAuB0B,SAAvB,GAAmC;AACjCjB,YAAU,oBAAUkB;AADa,CAAnC;;AAIA3B,uBAAuB4B,oBAAvB,GAA8C;AAC5CC,yBAAuB;AADqB,CAA9C;;kBAIe7B,sB","file":"RangeSelectorAccordion.js","sourcesContent":["import PlotlyFold from './PlotlyFold';\nimport PlotlyPanel from './PlotlyPanel';\nimport PropTypes from 'prop-types';\nimport React, {Component} from 'react';\nimport {connectRangeSelectorToAxis} from 'lib';\n\nconst RangeSelectorFold = connectRangeSelectorToAxis(PlotlyFold);\n\nclass RangeSelectorAccordion extends Component {\n  render() {\n    if (\n      !this.context.fullContainer ||\n      !this.context.fullContainer.rangeselector ||\n      !this.context.fullContainer.rangeselector.visible ||\n      // next line checks for \"all\" case\n      this.context.fullContainer._axisGroup === 0\n    ) {\n      return null;\n    }\n\n    const {\n      fullContainer: {\n        rangeselector: {buttons = []},\n      },\n      localize: _,\n    } = this.context;\n    const {children} = this.props;\n\n    const content =\n      buttons.length &&\n      buttons.map((btn, i) => (\n        <RangeSelectorFold\n          key={i}\n          rangeselectorIndex={i}\n          name={btn.label}\n          canDelete={true}\n        >\n          {children}\n        </RangeSelectorFold>\n      ));\n\n    const addAction = {\n      label: _('Button'),\n      handler: context => {\n        const {fullContainer, updateContainer} = context;\n        if (updateContainer) {\n          const rangeselectorIndex = Array.isArray(\n            fullContainer.rangeselector.buttons\n          )\n            ? fullContainer.rangeselector.buttons.length\n            : 0;\n\n          updateContainer({\n            [`rangeselector.buttons[${rangeselectorIndex}]`]: {},\n          });\n        }\n      },\n    };\n\n    return (\n      <PlotlyPanel addAction={addAction}>\n        {content ? content : null}\n      </PlotlyPanel>\n    );\n  }\n}\n\nRangeSelectorAccordion.contextTypes = {\n  fullContainer: PropTypes.object,\n  localize: PropTypes.func,\n};\n\nRangeSelectorAccordion.propTypes = {\n  children: PropTypes.node,\n};\n\nRangeSelectorAccordion.plotly_editor_traits = {\n  no_visibility_forcing: true,\n};\n\nexport default RangeSelectorAccordion;\n"]}