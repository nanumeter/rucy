{"version":3,"sources":["../../../src/components/containers/TraceRequiredPanel.js"],"names":["TraceRequiredPanel","context","fullData","filter","trace","visible","length","_","localize","props","children","rest","showPanel","emptyPanelMessage","heading","message","noTraceMessage","conditions","hasTrace","concat","extraConditions","messages","extraEmptyPanelMessages","forEach","condition","index","propTypes","node","bool","array","defaultProps","contextTypes","func"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;IAEMA,kB;;;;;;;;;;;+BACO;AACT,aAAO,KAAKC,OAAL,CAAaC,QAAb,CAAsBC,MAAtB,CAA6B;AAAA,eAASC,MAAMC,OAAf;AAAA,OAA7B,EAAqDC,MAArD,GAA8D,CAArE;AACD;;;6BAEQ;AAAA;;AAAA,UACUC,CADV,GACe,KAAKN,OADpB,CACAO,QADA;;AAAA,mBAEqB,KAAKC,KAF1B;AAAA,UAEAC,QAFA,UAEAA,QAFA;AAAA,UAEaC,IAFb;;AAGP,UAAIC,YAAY,IAAhB;AACA,UAAMC,oBAAoB,EAACC,SAAS,EAAV,EAAcC,SAAS,EAAvB,EAA1B;;AAEA,UAAMC,iBAAiB;AACrBF,iBAASP,EAAE,iDAAF,CADY;AAErBQ,iBAASR,EAAE,0CAAF;AAFY,OAAvB;;AAKA,UAAMU,aAAa,CAAC;AAAA,eAAM,OAAKC,QAAL,EAAN;AAAA,OAAD,EAAwBC,MAAxB,CACjB,KAAKV,KAAL,CAAWW,eAAX,GAA6B,KAAKX,KAAL,CAAWW,eAAxC,GAA0D,EADzC,CAAnB;;AAIA,UAAMC,WAAW,CAACL,cAAD,EAAiBG,MAAjB,CACf,KAAKV,KAAL,CAAWa,uBAAX,GACI,KAAKb,KAAL,CAAWa,uBADf,GAEI,EAHW,CAAjB;;AAMA,UAAI,KAAKb,KAAL,CAAWJ,OAAf,EAAwB;AACtBY,mBAAWM,OAAX,CAAmB,UAACC,SAAD,EAAYC,KAAZ,EAAsB;AACvC,cAAI,CAACb,SAAL,EAAgB;AACd;AACD;AACD,cAAI,CAACY,WAAL,EAAkB;AAChBZ,wBAAY,KAAZ;AACAC,8BAAkBC,OAAlB,GAA4BO,SAASI,KAAT,EAAgBX,OAA5C;AACAD,8BAAkBE,OAAlB,GAA4BM,SAASI,KAAT,EAAgBV,OAA5C;AACD;AACF,SATD;;AAWA,YAAIH,SAAJ,EAAe;AACb,iBAAO;AAAA;AAAiBD,gBAAjB;AAAwBD;AAAxB,WAAP;AACD;;AAED,eACE;AACE,mBAASG,kBAAkBC,OAD7B;AAEE,mBAASD,kBAAkBE;AAF7B,UADF;AAMD;AACD,aAAO,IAAP;AACD;;;;;;AAGHf,mBAAmB0B,SAAnB,GAA+B;AAC7BhB,YAAU,oBAAUiB,IADS;AAE7BtB,WAAS,oBAAUuB,IAFU;AAG7BR,mBAAiB,oBAAUS,KAHE;AAI7BP,2BAAyB,oBAAUO;AAJN,CAA/B;;AAOA7B,mBAAmB8B,YAAnB,GAAkC;AAChCzB,WAAS;AADuB,CAAlC;;AAIAL,mBAAmB+B,YAAnB,GAAkC;AAChC7B,YAAU,oBAAU2B,KADY;AAEhCrB,YAAU,oBAAUwB;AAFY,CAAlC;;kBAKehC,kB","file":"TraceRequiredPanel.js","sourcesContent":["import PanelEmpty from './PanelEmpty';\nimport PropTypes from 'prop-types';\nimport React, {Component} from 'react';\nimport {LayoutPanel} from './derived';\n\nclass TraceRequiredPanel extends Component {\n  hasTrace() {\n    return this.context.fullData.filter(trace => trace.visible).length > 0;\n  }\n\n  render() {\n    const {localize: _} = this.context;\n    const {children, ...rest} = this.props;\n    let showPanel = true;\n    const emptyPanelMessage = {heading: '', message: ''};\n\n    const noTraceMessage = {\n      heading: _(\"Looks like there aren't any traces defined yet.\"),\n      message: _(\"Go to the 'Create' tab to define traces.\"),\n    };\n\n    const conditions = [() => this.hasTrace()].concat(\n      this.props.extraConditions ? this.props.extraConditions : []\n    );\n\n    const messages = [noTraceMessage].concat(\n      this.props.extraEmptyPanelMessages\n        ? this.props.extraEmptyPanelMessages\n        : []\n    );\n\n    if (this.props.visible) {\n      conditions.forEach((condition, index) => {\n        if (!showPanel) {\n          return;\n        }\n        if (!condition()) {\n          showPanel = false;\n          emptyPanelMessage.heading = messages[index].heading;\n          emptyPanelMessage.message = messages[index].message;\n        }\n      });\n\n      if (showPanel) {\n        return <LayoutPanel {...rest}>{children}</LayoutPanel>;\n      }\n\n      return (\n        <PanelEmpty\n          heading={emptyPanelMessage.heading}\n          message={emptyPanelMessage.message}\n        />\n      );\n    }\n    return null;\n  }\n}\n\nTraceRequiredPanel.propTypes = {\n  children: PropTypes.node,\n  visible: PropTypes.bool,\n  extraConditions: PropTypes.array,\n  extraEmptyPanelMessages: PropTypes.array,\n};\n\nTraceRequiredPanel.defaultProps = {\n  visible: true,\n};\n\nTraceRequiredPanel.contextTypes = {\n  fullData: PropTypes.array,\n  localize: PropTypes.func,\n};\n\nexport default TraceRequiredPanel;\n"]}