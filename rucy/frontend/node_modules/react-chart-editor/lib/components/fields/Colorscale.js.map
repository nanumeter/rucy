{"version":3,"sources":["../../../src/components/fields/Colorscale.js"],"names":["Colorscale","props","onUpdate","bind","colorscale","Array","isArray","updatePlot","map","c","i","step","length","fullValue","v","propTypes","any","func"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;IAEMA,U;;;AACJ,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA,wHACXA,KADW;;AAEjB,UAAKC,QAAL,GAAgB,MAAKA,QAAL,CAAcC,IAAd,OAAhB;AAFiB;AAGlB;;;;6BAEQC,U,EAAY;AACnB,UAAIC,MAAMC,OAAN,CAAcF,UAAd,CAAJ,EAA+B;AAC7B,aAAKH,KAAL,CAAWM,UAAX,CACEH,WAAWI,GAAX,CAAe,UAACC,CAAD,EAAIC,CAAJ,EAAU;AACvB,cAAIC,OAAOD,KAAKN,WAAWQ,MAAX,GAAoB,CAAzB,CAAX;AACA,cAAIF,MAAM,CAAV,EAAa;AACXC,mBAAO,CAAP;AACD;AACD,iBAAO,CAACA,IAAD,EAAOF,CAAP,CAAP;AACD,SAND,CADF;AASD;AACF;;;6BAEQ;AAAA,UACAI,SADA,GACa,KAAKZ,KADlB,CACAY,SADA;;AAEP,UAAMT,aAAaC,MAAMC,OAAN,CAAcO,SAAd,IACfA,UAAUL,GAAV,CAAc;AAAA,eAAKM,EAAE,CAAF,CAAL;AAAA,OAAd,CADe,GAEf,IAFJ;;AAIA,aACE;AAAA;AAAW,aAAKb,KAAhB;AACE;AACE,oBAAUG,UADZ;AAEE,8BAAoB,KAAKF;AAF3B;AADF,OADF;AAQD;;;;;;AAGHF,WAAWe,SAAX;AACEF,aAAW,oBAAUG,GADvB;AAEET,cAAY,oBAAUU;AAFxB,GAGK,gBAAMF,SAHX;;kBAMe,6BAAmBf,UAAnB,C","file":"Colorscale.js","sourcesContent":["import ColorscalePicker from '../widgets/ColorscalePicker';\nimport Field from './Field';\nimport PropTypes from 'prop-types';\nimport React, {Component} from 'react';\nimport {connectToContainer} from 'lib';\n\nclass Colorscale extends Component {\n  constructor(props) {\n    super(props);\n    this.onUpdate = this.onUpdate.bind(this);\n  }\n\n  onUpdate(colorscale) {\n    if (Array.isArray(colorscale)) {\n      this.props.updatePlot(\n        colorscale.map((c, i) => {\n          let step = i / (colorscale.length - 1);\n          if (i === 0) {\n            step = 0;\n          }\n          return [step, c];\n        })\n      );\n    }\n  }\n\n  render() {\n    const {fullValue} = this.props;\n    const colorscale = Array.isArray(fullValue)\n      ? fullValue.map(v => v[1])\n      : null;\n\n    return (\n      <Field {...this.props}>\n        <ColorscalePicker\n          selected={colorscale}\n          onColorscaleChange={this.onUpdate}\n        />\n      </Field>\n    );\n  }\n}\n\nColorscale.propTypes = {\n  fullValue: PropTypes.any,\n  updatePlot: PropTypes.func,\n  ...Field.propTypes,\n};\n\nexport default connectToContainer(Colorscale);\n"]}