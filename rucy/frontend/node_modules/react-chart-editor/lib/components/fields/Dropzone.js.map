{"version":3,"sources":["../../../src/components/fields/Dropzone.js"],"names":["UnconnectedDropzone","props","fullValue","updatePlot","fileType","propTypes","value","any","onUpdate","func"],"mappings":";;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;IAEaA,mB,WAAAA,mB;;;;;;;;;;;6BACF;AACP,aACE;AAAA;AAAW,aAAKC,KAAhB;AACE;AACE,iBAAO,KAAKA,KAAL,CAAWC,SADpB;AAEE,oBAAU,KAAKD,KAAL,CAAWE,UAFvB;AAGE,oBAAU,KAAKF,KAAL,CAAWG;AAHvB;AADF,OADF;AASD;;;;;;AAGHJ,oBAAoBK,SAApB;AACEC,SAAO,oBAAUC,GADnB;AAEEC,YAAU,oBAAUC;AAFtB,GAGK,gBAAMJ,SAHX;;kBAMe,6BAAmBL,mBAAnB,C","file":"Dropzone.js","sourcesContent":["import Drop from '../widgets/Dropzone';\nimport Field from './Field';\nimport PropTypes from 'prop-types';\nimport React, {Component} from 'react';\nimport {connectToContainer} from 'lib';\n\nexport class UnconnectedDropzone extends Component {\n  render() {\n    return (\n      <Field {...this.props}>\n        <Drop\n          value={this.props.fullValue}\n          onUpdate={this.props.updatePlot}\n          fileType={this.props.fileType}\n        />\n      </Field>\n    );\n  }\n}\n\nUnconnectedDropzone.propTypes = {\n  value: PropTypes.any,\n  onUpdate: PropTypes.func,\n  ...Field.propTypes,\n};\n\nexport default connectToContainer(UnconnectedDropzone);\n"]}