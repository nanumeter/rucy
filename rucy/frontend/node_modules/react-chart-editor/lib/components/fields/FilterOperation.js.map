{"version":3,"sources":["../../../src/components/fields/FilterOperation.js"],"names":["operators","label","value","operations","inequality","inrange","exrange","inset","exset","findOperation","op","key","hasOwnProperty","map","o","indexOf","operator","UnconnectedFilterOperation","props","context","state","operation","fullValue","setOperation","bind","setState","updatePlot","optionRenderer","valueRenderer","backgroundDark","attr","opValue","length","propTypes","any","func","UnconnectedFilterValue","valueMax","setValue","setValueMax","v","container","val","split","trim","_","localize","defaultValue","label1","val1","Array","isArray","join","string","contextTypes","object","FilterOperation","FilterValue"],"mappings":"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","file":"FilterOperation.js","sourcesContent":["import Field from './Field';\nimport PropTypes from 'prop-types';\nimport React, {Component} from 'react';\nimport DropdownWidget from '../widgets/Dropdown';\nimport TextInput from '../widgets/TextInput';\nimport {connectToContainer} from 'lib';\n\nconst operators = [\n  {\n    label: 'Inequality',\n    value: 'inequality',\n  },\n  {\n    label: 'Include Range',\n    value: 'inrange',\n  },\n  {\n    label: 'Exclude Range',\n    value: 'exrange',\n  },\n  {\n    label: 'Include Values',\n    value: 'inset',\n  },\n  {\n    label: 'Exclude Values',\n    value: 'exset',\n  },\n];\n\nconst operations = {\n  inequality: [\n    {value: '!=', label: 'Target ≠ Reference'},\n    {value: '<', label: 'Target < Reference'},\n    {value: '<=', label: 'Target ≤ Reference'},\n    {value: '=', label: 'Target = Reference'},\n    {value: '>', label: 'Target > Reference'},\n    {value: '>=', label: 'Target ≥ Reference'},\n  ],\n  inrange: [\n    {value: '[]', label: 'Lower ≤ Target ≤ Upper'},\n    {value: '()', label: 'Lower < Target < Upper'},\n    {value: '[)', label: 'Lower ≤ Target < Upper'},\n    {value: '(]', label: 'Lower < Target ≤ Upper'},\n  ],\n  exrange: [\n    {value: ')(', label: 'Lower ≤ Target ≤ Upper'},\n    {value: '][', label: 'Lower < Target < Upper'},\n    {value: ')[', label: 'Lower ≤ Target < Upper'},\n    {value: '](', label: 'Lower < Target ≤ Upper'},\n  ],\n  inset: [{value: '{}', label: 'Include'}],\n  exset: [{value: '}{', label: 'Exclude'}],\n};\n\nconst findOperation = operator => {\n  let op = 'inequality';\n  for (const key in operations) {\n    if (\n      operations.hasOwnProperty(key) &&\n      operations[key].map(o => o.value).indexOf(operator) !== -1\n    ) {\n      op = key;\n      break;\n    }\n  }\n  return op;\n};\n\nclass UnconnectedFilterOperation extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.state = {\n      operation: findOperation(this.props.fullValue),\n      operator: operations.inequality[0].value,\n    };\n\n    this.setOperation = this.setOperation.bind(this);\n  }\n\n  setOperation(value) {\n    const operator = operations[value][0].value;\n    this.setState({operation: value, operator: operator});\n    this.props.updatePlot(operator);\n  }\n\n  render() {\n    const {\n      fullValue,\n      updatePlot,\n      optionRenderer,\n      valueRenderer,\n      backgroundDark,\n      attr,\n    } = this.props;\n\n    const opValue =\n      fullValue && fullValue.length > 0 ? fullValue : this.state.operator;\n    return (\n      <div>\n        <Field {...this.props} attr={attr}>\n          <DropdownWidget\n            backgroundDark={backgroundDark}\n            options={operators}\n            value={findOperation(opValue)}\n            onChange={this.setOperation}\n            clearable={false}\n            optionRenderer={optionRenderer}\n            valueRenderer={valueRenderer}\n          />\n          {this.state.operation === 'inset' ||\n          this.state.operation === 'exset' ? null : (\n            <DropdownWidget\n              backgroundDark={backgroundDark}\n              options={operations[this.state.operation]}\n              value={opValue}\n              onChange={updatePlot}\n              clearable={false}\n              optionRenderer={optionRenderer}\n              valueRenderer={valueRenderer}\n            />\n          )}\n        </Field>\n      </div>\n    );\n  }\n}\n\nUnconnectedFilterOperation.propTypes = {\n  fullValue: PropTypes.any,\n  updatePlot: PropTypes.func,\n  ...Field.propTypes,\n};\n\nclass UnconnectedFilterValue extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.state = {value: '', valueMax: ''};\n\n    this.setValue = this.setValue.bind(this);\n    this.setValueMax = this.setValueMax.bind(this);\n  }\n\n  setValue(v) {\n    const op = findOperation(this.context.container.operation);\n    this.setState({value: v});\n    let val;\n    val = op === 'inrange' || op === 'exrange' ? [v, this.state.valueMax] : v;\n    if (op === 'inset' || op === 'exset') {\n      val = val.split(',');\n      val = val.map(v => v.trim());\n    }\n    this.props.updatePlot(val);\n  }\n\n  setValueMax(v) {\n    this.setState({valueMax: v});\n    this.props.updatePlot([this.state.value, v]);\n  }\n\n  render() {\n    const {localize: _, container} = this.context;\n\n    const operation =\n      container && container.operation ? container.operation : '=';\n\n    const {fullValue, attr, defaultValue} = this.props;\n    const op = findOperation(operation);\n\n    let label1 = _('Reference');\n    if (op === 'inrange' || op === 'exrange') {\n      label1 = _('Lower Bound');\n    } else if (op === 'inset' || op === 'exset') {\n      label1 = _('Values');\n    }\n\n    let val1 = fullValue;\n    if ((op === 'inset' || op === 'exset') && Array.isArray(fullValue)) {\n      val1 = fullValue.join(', ');\n    } else if (Array.isArray(fullValue)) {\n      val1 = fullValue[0];\n    }\n\n    return (\n      <div>\n        <Field {...this.props} label={label1}>\n          <TextInput\n            value={val1}\n            defaultValue={val1}\n            onUpdate={this.setValue}\n          />\n        </Field>\n        {!(op === 'inrange' || op === 'exrange') ? null : (\n          <Field {...this.props} label={_('Upper Bound')} attr={attr}>\n            <TextInput\n              value={Array.isArray(fullValue) ? fullValue[1] : fullValue}\n              defaultValue={defaultValue}\n              onUpdate={this.setValueMax}\n            />\n          </Field>\n        )}\n      </div>\n    );\n  }\n}\n\nUnconnectedFilterValue.propTypes = {\n  defaultValue: PropTypes.string,\n  fullValue: PropTypes.any,\n  updatePlot: PropTypes.func,\n  ...Field.propTypes,\n};\nUnconnectedFilterValue.contextTypes = {\n  localize: PropTypes.func,\n  container: PropTypes.object,\n};\n\nexport const FilterOperation = connectToContainer(UnconnectedFilterOperation);\nexport const FilterValue = connectToContainer(UnconnectedFilterValue);\n"]}