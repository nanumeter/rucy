{"version":3,"sources":["../../../src/components/fields/TraceSelector.js"],"names":["TraceSelector","props","context","updatePlot","bind","setTraceDefaults","container","fullContainer","updateContainer","setLocals","_","localize","traceOptions","traceTypesConfig","traces","plotSchema","label","value","fullValue","mode","type","nextProps","nextContext","Object","assign","options","clearable","advancedTraceTypeSelector","openModal","contextTypes","func","bool","object","config","propTypes","isRequired","any"],"mappings":"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","file":"TraceSelector.js","sourcesContent":["import {UnconnectedDropdown} from './Dropdown';\nimport PropTypes from 'prop-types';\nimport React, {Component} from 'react';\nimport {\n  connectToContainer,\n  traceTypeToPlotlyInitFigure,\n  plotlyTraceToCustomTrace,\n  computeTraceOptionsFromSchema,\n} from 'lib';\nimport TraceTypeSelector, {\n  TraceTypeSelectorButton,\n} from 'components/widgets/TraceTypeSelector';\nimport Field from './Field';\n\nclass TraceSelector extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.updatePlot = this.updatePlot.bind(this);\n\n    this.setTraceDefaults(\n      props.container,\n      props.fullContainer,\n      props.updateContainer\n    );\n    this.setLocals(props, context);\n  }\n\n  setLocals(props, context) {\n    const _ = context.localize;\n    if (props.traceOptions) {\n      this.traceOptions = props.traceOptions;\n    } else if (context.traceTypesConfig) {\n      this.traceOptions = context.traceTypesConfig.traces(_);\n    } else if (context.plotSchema) {\n      this.traceOptions = computeTraceOptionsFromSchema(\n        context.plotSchema,\n        _,\n        this.context\n      );\n    } else {\n      this.traceOptions = [{label: _('Scatter'), value: 'scatter'}];\n    }\n    if (props.container) {\n      this.fullValue = plotlyTraceToCustomTrace(props.container);\n    }\n  }\n\n  setTraceDefaults(container, fullContainer, updateContainer) {\n    if (container && !container.mode && fullContainer.type === 'scatter') {\n      updateContainer({\n        type: 'scatter',\n        mode: fullContainer.mode || 'markers',\n      });\n    }\n  }\n\n  componentWillReceiveProps(nextProps, nextContext) {\n    const {container, fullContainer, updateContainer} = nextProps;\n    this.setTraceDefaults(container, fullContainer, updateContainer);\n    this.setLocals(nextProps, nextContext);\n  }\n\n  updatePlot(value) {\n    const {updateContainer} = this.props;\n    if (updateContainer) {\n      updateContainer(traceTypeToPlotlyInitFigure(value));\n    }\n  }\n\n  render() {\n    const props = Object.assign({}, this.props, {\n      fullValue: this.fullValue,\n      updatePlot: this.updatePlot,\n      options: this.traceOptions,\n      clearable: false,\n    });\n    // Check and see if the advanced selector prop is true\n    const {advancedTraceTypeSelector} = this.context;\n    if (advancedTraceTypeSelector) {\n      return (\n        <Field {...props}>\n          <TraceTypeSelectorButton\n            {...props}\n            traceTypesConfig={this.context.traceTypesConfig}\n            handleClick={() => this.context.openModal(TraceTypeSelector, props)}\n          />\n        </Field>\n      );\n    }\n\n    return <UnconnectedDropdown {...props} />;\n  }\n}\n\nTraceSelector.contextTypes = {\n  openModal: PropTypes.func,\n  advancedTraceTypeSelector: PropTypes.bool,\n  traceTypesConfig: PropTypes.object,\n  plotSchema: PropTypes.object,\n  config: PropTypes.object,\n  localize: PropTypes.func,\n};\n\nTraceSelector.propTypes = {\n  container: PropTypes.object.isRequired,\n  fullContainer: PropTypes.object.isRequired,\n  fullValue: PropTypes.any,\n  updateContainer: PropTypes.func,\n};\n\nexport default connectToContainer(TraceSelector);\n"]}