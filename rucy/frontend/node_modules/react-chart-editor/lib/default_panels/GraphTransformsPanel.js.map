{"version":3,"sources":["../../src/default_panels/GraphTransformsPanel.js"],"names":["AggregationSection","Aggregations","context","fullContainer","aggregations","_","localize","length","filter","aggr","target","match","map","i","label","value","plotly_editor_traits","no_visibility_forcing","contextTypes","object","func","GraphTransformsPanel","props"],"mappings":"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","file":"GraphTransformsPanel.js","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Radio,\n  TransformAccordion,\n  TraceAccordion,\n  DataSelector,\n  Dropdown,\n  PlotlySection,\n  FilterOperation,\n  FilterValue,\n} from '../components';\nimport {connectAggregationToTransform} from '../lib';\n\nconst AggregationSection = connectAggregationToTransform(PlotlySection);\n\nexport class Aggregations extends Component {\n  render() {\n    const {\n      fullContainer: {aggregations = []},\n    } = this.context;\n    const {localize: _} = this.context;\n    if (aggregations.length === 0) {\n      return null;\n    }\n\n    return aggregations\n      .filter(\n        aggr =>\n          aggr.target && aggr.target.match(/transforms\\[\\d*\\]\\./gi) === null\n      )\n      .map(({target}, i) => (\n        <AggregationSection show key={i} aggregationIndex={i}>\n          <Dropdown\n            attr=\"func\"\n            label={target}\n            options={[\n              {label: _('Count'), value: 'count'},\n              {label: _('Sum'), value: 'sum'},\n              {label: _('Average'), value: 'avg'},\n              {label: _('Median'), value: 'median'},\n              {label: _('Mode'), value: 'mode'},\n              {label: _('RMS'), value: 'rms'},\n              {label: _('Standard Deviation'), value: 'stddev'},\n              {label: _('Min'), value: 'min'},\n              {label: _('Max'), value: 'max'},\n              {label: _('First'), value: 'first'},\n              {label: _('Last'), value: 'last'},\n              {label: _('Change'), value: 'change'},\n              {label: _('Range'), value: 'range'},\n            ]}\n            clearable={false}\n          />\n        </AggregationSection>\n      ));\n  }\n}\n\nAggregations.plotly_editor_traits = {no_visibility_forcing: true};\nAggregations.contextTypes = {\n  fullContainer: PropTypes.object,\n  localize: PropTypes.func,\n};\n\nconst GraphTransformsPanel = (props, {localize: _}) => {\n  return (\n    <TraceAccordion>\n      <TransformAccordion>\n        <Radio\n          attr=\"enabled\"\n          options={[\n            {label: _('Enabled'), value: true},\n            {label: _('Disabled'), value: false},\n          ]}\n        />\n\n        <DataSelector label={_('By')} attr=\"groups\" />\n\n        <DataSelector label={_('Target')} attr=\"target\" />\n        <FilterOperation label={_('Operator')} attr=\"operation\" />\n        <FilterValue label={_('Value')} attr=\"value\" />\n\n        <PlotlySection name={_('Aggregations')} attr=\"aggregations\">\n          <Aggregations />\n        </PlotlySection>\n      </TransformAccordion>\n    </TraceAccordion>\n  );\n};\n\nGraphTransformsPanel.contextTypes = {\n  localize: PropTypes.func,\n};\n\nexport default GraphTransformsPanel;\n"]}