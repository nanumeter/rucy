{"version":3,"sources":["../src/PlotlyEditor.js"],"names":["PlotlyEditor","props","state","graphDiv","PlotComponent","plotly","hideControls","dataSources","dataSourceOptions","onUpdate","advancedTraceTypeSelector","locale","traceTypesConfig","dictionaries","showFieldTooltips","srcConverters","makeDefaultTrace","children","width","height","data","layout","frames","config","useResizeHandler","debug","fig","setState","divId","propTypes","any","object","array","func","bool","string","shape","toSrc","isRequired","fromSrc","defaultProps"],"mappings":"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","file":"PlotlyEditor.js","sourcesContent":["import React, {Component} from 'react';\nimport createPlotComponent from 'react-plotly.js/factory';\nimport EditorControls from './EditorControls';\nimport PropTypes from 'prop-types';\n\nclass PlotlyEditor extends Component {\n  constructor(props) {\n    super();\n    this.state = {graphDiv: {}};\n    this.PlotComponent = createPlotComponent(props.plotly);\n  }\n\n  render() {\n    return (\n      <div className=\"plotly_editor\">\n        {!this.props.hideControls && (\n          <EditorControls\n            graphDiv={this.state.graphDiv}\n            dataSources={this.props.dataSources}\n            dataSourceOptions={this.props.dataSourceOptions}\n            plotly={this.props.plotly}\n            onUpdate={this.props.onUpdate}\n            advancedTraceTypeSelector={this.props.advancedTraceTypeSelector}\n            locale={this.props.locale}\n            traceTypesConfig={this.props.traceTypesConfig}\n            dictionaries={this.props.dictionaries}\n            showFieldTooltips={this.props.showFieldTooltips}\n            srcConverters={this.props.srcConverters}\n            makeDefaultTrace={this.props.makeDefaultTrace}\n          >\n            {this.props.children}\n          </EditorControls>\n        )}\n        <div\n          className=\"plotly_editor_plot\"\n          style={{width: '100%', height: '100%'}}\n        >\n          <this.PlotComponent\n            data={this.props.data}\n            layout={this.props.layout}\n            frames={this.props.frames}\n            config={this.props.config}\n            useResizeHandler={this.props.useResizeHandler}\n            debug={this.props.debug}\n            onInitialized={(fig, graphDiv) => this.setState({graphDiv})}\n            onUpdate={(fig, graphDiv) => this.setState({graphDiv})}\n            style={{width: '100%', height: '100%'}}\n            divId={this.props.divId}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nPlotlyEditor.propTypes = {\n  children: PropTypes.any,\n  layout: PropTypes.object,\n  data: PropTypes.array,\n  config: PropTypes.object,\n  dataSourceOptions: PropTypes.array,\n  dataSources: PropTypes.object,\n  frames: PropTypes.array,\n  onUpdate: PropTypes.func,\n  plotly: PropTypes.object,\n  useResizeHandler: PropTypes.bool,\n  debug: PropTypes.bool,\n  advancedTraceTypeSelector: PropTypes.bool,\n  locale: PropTypes.string,\n  traceTypesConfig: PropTypes.object,\n  dictionaries: PropTypes.object,\n  divId: PropTypes.string,\n  hideControls: PropTypes.bool,\n  showFieldTooltips: PropTypes.bool,\n  srcConverters: PropTypes.shape({\n    toSrc: PropTypes.func.isRequired,\n    fromSrc: PropTypes.func.isRequired,\n  }),\n  makeDefaultTrace: PropTypes.func,\n};\n\nPlotlyEditor.defaultProps = {\n  hideControls: false,\n  showFieldTooltips: false,\n};\n\nexport default PlotlyEditor;\n"]}